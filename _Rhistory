p <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
library(ggplot2)
library(gcookbook)
p <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
p + ggtitle("Age and Height\nof Schoolchildren") +
theme(plot.title=element_text(size=rel(1.5), lineheight=.9, family="Times",
face="bold.italic", colour="red"))
p + annotate(“text”, x=15, y=53, label="Some text", size = 7, family="Times",fontface="bold.italic", colour="red")
library(ggplot2)
p + ggtitle("Plot title here") +
theme(
axis.title.x = element_text(colour="red", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
p + theme(
panel.grid.major = element_line(colour="red"),
panel.grid.minor = element_line(colour="red", linetype="dashed", size=0.2),
panel.background = element_rect(fill="lightblue"),
panel.border = element_rect(colour="blue", fill=NA, size=2))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="red", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="blue", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="blue", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="blue", size=20, face="bold"))
p + facet_grid(sex ~ .) + theme(
strip.background = element_rect(fill="pink"),
strip.text.y = element_text(size=14, angle=-90, face="bold"))
p + facet_grid(sex ~ .) + theme(
strip.background = element_rect(fill="yellow"),
strip.text.y = element_text(size=14, angle=-90, face="bold"))
p + facet_grid(sex ~ .) + theme(
strip.background = element_rect(fill="lightblue"),
strip.text.y = element_text(size=14, angle=-90, face="bold"))
p + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
# 圖例選項
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
# 圖例選項
p + theme(
legend.background = element_rect(fill="blue", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
# 圖例選項
p + theme(
legend.background = element_point(fill="blue", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
# 隱藏縱向網格線(=x軸)
p + theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
library(gcookbook)
p <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
library("colorspace", lib.loc="~/R/win-library/3.3")
library("dichromat", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("gcookbook", lib.loc="~/R/win-library/3.3")
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
library("labeling", lib.loc="~/R/win-library/3.3")
library("plyr", lib.loc="~/R/win-library/3.3")
library("RColorBrewer", lib.loc="~/R/win-library/3.3")
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + ggtitle("SHERLOCK") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="blue", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="blue", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="blue", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="blue", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="blue", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="blue", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="yellow", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="black", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="yellow", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="black", size=14),
axis.text.x = element_text(colour="red"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="yellow", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="black", size=14),
axis.text.x = element_text(colour="red"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="green"),
plot.title = element_text(colour="yellow", size=20, face="bold"))
p + ggtitle("hihi") +
theme(
axis.title.x = element_text(colour="pink", size=14),
axis.text.x = element_text(colour="red"),
axis.title.y = element_text(colour="orange", size=14, angle = 90),
axis.text.y = element_text(colour="green"),
plot.title = element_text(colour="yellow", size=20, face="bold"))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + facet_grid(sex ~ .) + theme(
strip.background = element_rect(fill="lightblue"),
strip.text.y = element_text(size=14, angle=-90, face="bold"))
# 圖例選項
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
p + theme(
legend.background = element_rect(fill="grey85", colour="blue", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
AP
AP=as.data.frame(AirPassengers)
Date=as.Date(vector())
for(i in 1:144){
Date[i]=as.Date("1949-01-01")+i*30
}
Date=data.frame(Date=Date)
AP$Date=Date$Date
model=lm(data=AP,x~Date)
lm.prd=predict(model,Date,se.fit = T)
AP$lm=lm.prd$fit
AP$lm.se=lm.prd$se.fit
HW.add=HoltWinters(AirPassengers)
HW=as.data.frame(HW.add$fit)
HW.x=c(c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA),HW$xhat)
AP$HW=HW.x
AP
p <-subset(AP,Source=="lm"),aes(x=Date,y=Sales)+geom_line()
p <-ggplot(subset(AP,Source=="lm"),aes(x=Date,y=Sales))+geom_line()
p <-ggplot(subset(AP,AP$lm),aes(x=Date,y=Sales))+geom_line()
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white")
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) +
geom_point(alpha=.5) +
scale_size_area() +
scale_colour_brewer(palette="Set1")
pg<-AP
pg<-AP
ggplot(AP,aes(x=label,y=sales,fill=lm))+geom_boxplot()+scale_fill_manual(values=c("grey85","grey85","#FFDDCC"),guide=FALSE)
pg<-AP
ggplot(AP,aes(x=x,y=sales,fill=lm))+geom_boxplot()+scale_fill_manual(values=c("grey85","grey85","#FFDDCC"),guide=FALSE)
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point()
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, shape=22, colour="darkred", fill="pink")
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="darkred", fill="pink")
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4,  fill="pink")
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="darkred", fill="pink")
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="darkred", fill="pink")
ggplot(AP,aes(x=x,y=HA))+geom_point(size=4, colour="darkred", fill="blue")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="darkred", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="darkred", fill="pink")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="darkred", fill="blue")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,ce(aes(x=x,y=lm))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,ce(aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,ce(aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2))
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2))
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(group=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="darkred", fill="pink")
pg<-AP
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=lm))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=Date))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=Date))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=Date))+geom_line(aes(lm=1))+geom_point(size=4)+geom_errorbar(aes(ymin=lm-lm.se,ymax=lm+lm.se),width=.2)
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")+
ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
ggplot(AP,aes(x=x,y=lm))+geom_point(size=4, colour="pink", fill="pink")+ggplot(AP,aes(x=x,y=HW))+geom_point(size=4, colour="blue", fill="blue")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("gcookbook", lib.loc="~/R/win-library/3.3")
library("scales", lib.loc="~/R/win-library/3.3")
library("plyr", lib.loc="~/R/win-library/3.3")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() + coord_flip()
p <- ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
p + expand_limits(y=0)
p + coord_cartesian(ylim = c(4, 6.5))
#y軸上下對調
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() + scale_y_reverse()
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() + ylim(6.5,3.5)
sp <- ggplot(marathon, aes(x=Half,y=Full)) + geom_point()
sp + coord_fixed()
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
#y軸分點
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="trt2")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
#圓形長條圖
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
#類別變數分點
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
#調整xy軸比例 符合數字正確的比例
sp <- ggplot(marathon, aes(x=Half,y=Full)) + geom_point()
sp + coord_fixed()
#類別變數分點
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt2", "ctrl"), breaks="ctrl")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
scale_x_continuous(breaks=seq(0, 420, 15))
#y軸分點
sp + coord_fixed(ratio=1/2) +
scale_y_continuous(breaks=seq(0, 420, 30)) +
scale_x_continuous(breaks=seq(0, 420, 15))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
sp <- ggplot(marathon, aes(x=Half,y=Full)) + geom_point()
sp + coord_fixed()
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_x_discrete(limits=c("trt1", "ctrl"), breaks="ctrl")
#y軸分點
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(limits = =c(4, 4.25, 4.5, 5, 6, 8))
#y軸分點
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(limits =c(4, 4.25, 4.5, 5, 6, 8))
ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot() +
scale_y_continuous(breaks=c(4, 4.25, 4.5, 5, 6, 8))
p <- ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
p + ylim(0, max(PlantGrowth$weight))
p + coord_cartesian(ylim = c(4, 6.5))
p + expand_limits(y=0)
sp <- ggplot(marathon, aes(x=Half,y=Full)) + geom_point()
sp + coord_fixed()
sp + coord_fixed(ratio=1/2) +
scale_y_continuous(breaks=seq(0, 420, 30)) +
scale_x_continuous(breaks=seq(0, 420, 15))
ggplot(wind, aes(x=DirCat, fill=SpeedCat)) +
geom_histogram(binwidth=15, origin=-7.5)
ggplot(wind, aes(x=DirCat, fill=SpeedCat)) +
geom_histogram(binwidth=15, origin=-7.5) +
coord_polar()
ggplot(wind, aes(x=DirCat, fill=SpeedCat)) +
geom_histogram(binwidth=15, origin=-7.5) +
coord_polar()+
scale_x_continuous(limits=c(0,360))
p + scale_x_date(breaks=datebreaks, labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30, hjust=1))
library(scales)
p + scale_x_date(breaks=datebreaks, labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30, hjust=1))
p + scale_x_date(breaks=datebreaks, labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30, hjust=1))
p + scale_x_date(breaks=datebreaks) +
theme(axis.text.x = element_text(angle=30, hjust=1))
p + scale_x_date(breaks=datebreaks) +
theme(axis.text.x = element_text(angle=30, hjust=1))
Sys.setlocale("LC_TIME", "italian")
p + scale_x_date(breaks=datebreaks, labels=date_format("%Y %b")) +
theme(axis.text.x = element_text(angle=30, hjust=1))
www <- data.frame(minute = as.numeric(time(WWWusage)),
users = as.numeric(WWWusage))
timeHM_formatter <- function(x) {
h <- floor(x/60) #包含不大於x的相應元素的最大整數的數值向量
m <- floor(x %% 60) #餘數
lab <- sprintf("%d:%02d", h, m) # HH:MM
return(lab)
}
www <- data.frame(minute = as.numeric(time(WWWusage)),
users = as.numeric(WWWusage))
timeHM_formatter <- function(x) {
h <- floor(x/60) #包含不大於x的相應元素的最大整數的數值向量
m <- floor(x %% 60) #餘數
lab <- sprintf("%d:%02d", h, m) # HH:MM
return(lab)
}
ggplot(www, aes(x=minute, y=users)) + geom_line() +
scale_x_continuous(name="time", breaks=seq(0, 100, by=10),
labels=timeHM_formatter)
timeHM_formatter(c(0, 50, 51, 59, 60, 130, 604))
www <- data.frame(minute = as.numeric(time(WWWusage)),
users = as.numeric(WWWusage))
names(iris)
iris$score=iris$Sepal.Width*8+iris$Petal.Width*3+2.8*iris$Petal.Length
iris$price=iris$Sepal.Width*-5.3+iris$Petal.Width*-2.1+2.8*iris$Petal.Length+iris$Sepal.Length*5.5
iris$level=cut(iris$score,breaks=5,label=c("drop","poor","normal","good","perfect"))
iris1=iris[,-c(1:4,6)]
iris
ggplot(www, aes(x=minute, y=users)) + geom_line() +
scale_x_continuous(name="time", breaks=seq(0, 100, by=10),
labels=timeHM_formatter)
ggplot(www, aes(x=minute, y=users)) + geom_line() +
scale_x_continuous(name="time", breaks=seq(0, 100, by=10),
labels=timeHM_formatter)
ggplot(iris, aes(x=score, y=price)) + geom_line()
p <- ggplot(iris, aes(x=score, y=price)) + geom_line()
p+coord_fixed()
p <- ggplot(iris, aes(x=score, y=price)) + geom_line()
p+coord_fixed()+ylim(0,iris$price)
p <- ggplot(iris, aes(x=price, fill=level)) + geom_histogram()
p <- ggplot(iris, aes(x=price, fill=level)) + geom_histogram()
ggplot(iris, aes(x=price, fill=level)) + geom_histogram()
ggplot(iris, aes(y=price, fill=level)) + geom_histogram()
ggplot(iris, aes(y=price, fill=level)) + geom_histogram()
ggplot(iris, aes(x=price, fill=level)) + geom_histogram()
ggplot(iris, aes(x=level, y=price)) + geom_histogram()
ggplot(iris, aes(x=level, y=price)) + geom_line()
ggplot(iris,aes(x=price))+geom_dotplot()
ggplot(iris,aes(x=price,fill=level))+geom_dotplot()
ggplot(iris,aes(x=price))+geom_dotplot()
ggplot(iris,aes(x=price,fill=level))+geom_dotplot()
ggplot(iris,aes(x=level,fill=price))+geom_dotplot()
ggplot(iris,aes(x=level,y=price))+geom_dotplot()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()
iris1
ggplot(iris1, aes(x=level, y=price)) + geom_line()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()
iris1
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()
ggplot(iris1,aes(x=price,fill=level))+geom_bar()
ggplot(iris1,aes(x=price,fill=level))+geom_bar()+coord_flip()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()+ylim(0,max(iris1$price))
ggplot(iris1,aes(x=price,fill=level))+geom_bar()+coord_flip()
ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()+coord_fixed()
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
names(iris)
iris$score=iris$Sepal.Width*8+iris$Petal.Width*3+2.8*iris$Petal.Length
iris$price=iris$Sepal.Width*-5.3+iris$Petal.Width*-2.1+2.8*iris$Petal.Length+iris$Sepal.Length*5.5
iris$level=cut(iris$score,breaks=5,label=c("drop","poor","normal","good","perfect"))
iris1=iris[,-c(1:4,6)]
iris1
p <- ggplot(iris1, aes(x=level, y=price)) + geom_line()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()+ylim(0,max(iris1$price))
iris1
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("gcookbook", lib.loc="~/R/win-library/3.3")
library("plyr", lib.loc="~/R/win-library/3.3")
names(iris)
iris$score=iris$Sepal.Width*8+iris$Petal.Width*3+2.8*iris$Petal.Length
iris$price=iris$Sepal.Width*-5.3+iris$Petal.Width*-2.1+2.8*iris$Petal.Length+iris$Sepal.Length*5.5
iris$level=cut(iris$score,breaks=5,label=c("drop","poor","normal","good","perfect"))
iris1=iris[,-c(1:4,6)]
iris1
p <- ggplot(iris1, aes(x=level, y=price)) + geom_line()
ggplot(iris1,aes(x=level,y=price))+geom_dotplot()+ylim(0,max(iris1$price))
iris1
p <- ggplot(iris1,aes(x=price,fill=level))+geom_bar()+ylim(0,1)
p+coord_flip()
